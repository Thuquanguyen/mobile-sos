import 'dart:convert';import 'package:flutter/cupertino.dart';import 'package:hello_wolrd/model/StationItem.dart';import 'package:http/http.dart' as http;import 'package:google_maps_flutter/google_maps_flutter.dart';class Station with ChangeNotifier {  Map<String, Marker> _itemsMarker = {};  List<StationItem> _itemStation = [];  List<StationItem> _itemSearch = [];  StationItem _stationItem;  bool _isSearch = false;  bool _isContact = false;  String _textSearch = "";  CameraPosition _cameraPosition = CameraPosition(    target: LatLng(21.025142, 105.833101),    zoom: 14.4746,  );  List<StationItem> get itemStation {    return [..._itemStation];  }  List<StationItem> get itemSearchStation {    return [..._itemSearch];  }  Map<String, Marker> get itemsMarker {    return {..._itemsMarker};  }  StationItem get station {    return _stationItem;  }  CameraPosition get cameraPosition {    return _cameraPosition;  }  String get textSearch {    return _textSearch;  }  CameraPosition findByStationId(String id) {    StationItem stationItem = findById(id);    print(stationItem.lat);    print(stationItem.long);    _textSearch = stationItem.name;    _isSearch = false;    _cameraPosition = CameraPosition(      target: LatLng(stationItem.lat, stationItem.long),      zoom: 14.4746,    );    notifyListeners();  }  bool get isSearch {    return _isSearch;  }  bool get isContact {    return _isContact;  }  void setContact() {    _isContact = false;    notifyListeners();  }  StationItem findById(String id) {    return _itemStation.firstWhere((station) => station.id == id);  }  List<StationItem> findNameStation(String name) {    _itemSearch = name != ""        ? _itemStation            .where((station) =>                station.name.toLowerCase().contains(name.toLowerCase()))            .toList()        : [];    _isSearch = _itemSearch.length != 0 ? true : false;    notifyListeners();  }  Future<void> fetDataMaker() async {    const url = 'https://sos-manage.firebaseio.com/station.json';    final response = await http.get(url);    List<StationItem> loadStation = [];    final extractData = json.decode(response.body) as Map<String, dynamic>;    if (extractData == null) {      return;    }    extractData.forEach((stationId, stationData) {      StationItem item = StationItem();      item = StationItem(          id: stationId,          name: stationData["name"],          address: stationData["address"],          email: stationData["email"],          website: stationData["website"],          about: stationData["about"],          openAndCloseTime: stationData["open_close_time"],          lat: stationData["lat"],          long: stationData["long"],          rate: stationData["rate"],          confirmAddress: stationData["confirm"],          favorite: false,          imageList: stationData["image"],          phoneNumber: stationData["phone_number"],          supportDetails: stationData["support_details"],          workingDay: stationData["working_day"]);      Marker marker = Marker(          markerId: MarkerId("$stationId"),          position: LatLng(stationData["lat"], stationData["long"]),          infoWindow: InfoWindow(title: stationData["name"]),          onTap: () {            _stationItem = item;            _isContact = true;            notifyListeners();          });      _stationItem = item;      loadStation.add(item);      _itemsMarker["m$stationId"] = marker;    });    _itemStation = loadStation.reversed.toList();    notifyListeners();  }  void clear() {    _itemsMarker = {};    _itemStation = [];    notifyListeners();  }}